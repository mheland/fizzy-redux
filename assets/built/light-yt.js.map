{"version":3,"file":"light-yt.js","sources":["light-yt.js"],"sourcesContent":["/*\n * Light YouTube Embeds by @labnol\n * Credit: https://www.labnol.org/\n * Title from YT oauth by @kmhelander \n * Optimzed by Google Bard\n */\n\n\nfunction getYoutubeData(videoId) {\n  let ytDataUrl = 'https://www.youtube-nocookie.com/oembed?format=json&url=http%3A//youtube.com/watch%3Fv%3D' + videoId;\n  return fetch(ytDataUrl)\n    .then(res => res.json())\n    .catch(err => { console.log(err) });\n}\n\nfunction labnolIframe(youtubePlayer) {\n  let iframe = document.createElement('iframe');\n  iframe.setAttribute('src', 'https://www.youtube-nocookie.com/embed/' + youtubePlayer.dataset.id + '?autoplay=1&rel=0');\n  iframe.setAttribute('frameborder', '0');\n  iframe.setAttribute('allowfullscreen', '1');\n  iframe.setAttribute('allow',\n    'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture');\n  youtubePlayer.parentNode.replaceChild(iframe, youtubePlayer);\n}\n\nfunction initYouTubeVideos() {\n  let playerElements = document.getElementsByClassName('youtube-player');\n  for (let n = 0; n < playerElements.length; n++) {\n    let videoId = playerElements[n].dataset.id;\n    let thisPlayerId = 'playerid-' + n.toString();\n\n    getYoutubeData(videoId)\n      .then(out => document.getElementById(thisPlayerId).innerHTML = out.title.substr(0, 40))\n      .catch(err => { console.log(err) });\n\n    let div = document.createElement('div');\n    div.setAttribute('data-id', videoId);\n    div.appendChild(document.createElement('img')).src = '//i.ytimg.com/vi/ID/hqdefault.jpg'.replace('ID', videoId);\n    \n    let videoTitle = document.createElement('div');\n    videoTitle.setAttribute('class', 'videotitle');\n    videoTitle.setAttribute('id', thisPlayerId);\n    videoTitle.appendChild(document.createTextNode(''));\n    div.appendChild(videoTitle);\n\n    let playButton=document.createElement('div');\n    playButton.setAttribute(\"class\", \"play plausible-event-name=VideoPlay\");\n    div.appendChild(playButton); \n    div.onclick = function() { labnolIframe(this); };\n    playerElements[n].appendChild(div);\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', initYouTubeVideos);\n"],"names":["getYoutubeData","videoId","fetch","then","res","json","catch","err","console","log","labnolIframe","youtubePlayer","let","iframe","document","createElement","setAttribute","dataset","id","parentNode","replaceChild","initYouTubeVideos","playerElements","getElementsByClassName","n","length","thisPlayerId","toString","out","getElementById","innerHTML","title","substr","div","videoTitle","appendChild","src","replace","playButton","createTextNode","onclick","this","addEventListener"],"mappings":"AAQA,SAASA,eAAeC,GAEtB,OAAOC,MADS,4FAA8FD,CACxF,EACnBE,KAAKC,GAAOA,EAAIC,KAAK,CAAC,EACtBC,MAAMC,IAASC,QAAQC,IAAIF,CAAG,CAAE,CAAC,CACtC,CAEA,SAASG,aAAaC,GACpBC,IAAIC,EAASC,SAASC,cAAc,QAAQ,EAC5CF,EAAOG,aAAa,MAAO,0CAA4CL,EAAcM,QAAQC,GAAK,mBAAmB,EACrHL,EAAOG,aAAa,cAAe,GAAG,EACtCH,EAAOG,aAAa,kBAAmB,GAAG,EAC1CH,EAAOG,aAAa,QAClB,yEAAyE,EAC3EL,EAAcQ,WAAWC,aAAaP,EAAQF,CAAa,CAC7D,CAEA,SAASU,oBACPT,IAAIU,EAAiBR,SAASS,uBAAuB,gBAAgB,EACrE,IAAKX,IAAIY,EAAI,EAAGA,EAAIF,EAAeG,OAAQD,CAAC,GAAI,CAC9CZ,IAAIX,EAAUqB,EAAeE,GAAGP,QAAQC,GACxCN,IAAIc,EAAe,YAAcF,EAAEG,SAAS,EAE5C3B,eAAeC,CAAO,EACnBE,KAAKyB,GAAOd,SAASe,eAAeH,CAAY,EAAEI,UAAYF,EAAIG,MAAMC,OAAO,EAAG,EAAE,CAAC,EACrF1B,MAAMC,IAASC,QAAQC,IAAIF,CAAG,CAAE,CAAC,EAEpCK,IAAIqB,EAAMnB,SAASC,cAAc,KAAK,EAIlCmB,GAHJD,EAAIjB,aAAa,UAAWf,CAAO,EACnCgC,EAAIE,YAAYrB,SAASC,cAAc,KAAK,CAAC,EAAEqB,IAAM,oCAAoCC,QAAQ,KAAMpC,CAAO,EAE7Fa,SAASC,cAAc,KAAK,GAMzCuB,GALJJ,EAAWlB,aAAa,QAAS,YAAY,EAC7CkB,EAAWlB,aAAa,KAAMU,CAAY,EAC1CQ,EAAWC,YAAYrB,SAASyB,eAAe,EAAE,CAAC,EAClDN,EAAIE,YAAYD,CAAU,EAEXpB,SAASC,cAAc,KAAK,GAC3CuB,EAAWtB,aAAa,QAAS,qCAAqC,EACtEiB,EAAIE,YAAYG,CAAU,EAC1BL,EAAIO,QAAU,WAAa9B,aAAa+B,IAAI,CAAG,EAC/CnB,EAAeE,GAAGW,YAAYF,CAAG,CACnC,CACF,CAEAnB,SAAS4B,iBAAiB,mBAAoBrB,iBAAiB"}